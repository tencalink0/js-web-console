[
    {
        "name": "test.js",
        "content": "let i = 0;\nconsole.log(i + 2);\nlet p = 5;\nlet q = 7;\nconsole.log(p+q);",
        "description": "A basic IO test"
    },
    {
        "name": "sqrt.js",
        "content": "function simpleMethod(number) {\n\tlet n = 0;\n\tlet success = false;\n\tdo {\n\t\tlet nsquared = n*n;\n\t\tif (nsquared === number || n*n > number) {\n\t\t\tsuccess = true;\n\t\t\tif (n*n > number) {\n\t\t\t\tn = `Failed at ${n}`;\n\t\t\t}\n\t\t} else {\n\t\t\tn++;\n\t\t}\n\t} while (success === false)\n\treturn n;\n}\n\nfunction betterMethod(number) {\n\tlet n = 0;\n\tlet low = 1;\n\tlet high = number;\n\tlet guess = 0;\n\tlet success = false;\n\tdo {\n\t\tguess = (low + high) / 2;\n\t\tif (guess**2 === number) {\n\t\t\tsuccess = true;\n\t\t} else if (guess**2 > number) {\n\t\t\thigh = guess;\n\t\t} else {\n\t\t\tlow = guess;\n\t\t}\n\t\tif (n > 1000) {\n\t\t\tlet guess = `Failed at ${guess}`;\n\t\t\tsuccess = true;\n\t\t} else {\n\t\t\tn++\n\t\t}\n\t} while (success === false)\n\treturn guess;\n}\n\nconsole.log('Simple method: ' + simpleMethod(tArg0));\nconsole.log('Better method: ' + betterMethod(tArg0));",
        "description": "Square rooting a number by taking a terminal argument (MUST BE RUN USING -cr or else it crashes)"
    }
]